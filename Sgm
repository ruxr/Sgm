#!/bin/sh
HLP="Simple graphic monitoring

	@(#) Sgm V2.0 (C) 2022 by Roman Oreshnikov

	This is free software, and comes with NO WARRANTY

Usage: Sgm [options] Path

Options:
  -a  Absolute inputs, default: counters
  -h  Display this help

Report bugs to <r.oreshnikov@gmail.com>"
Err() { echo -e "$0: $*" >&2; exit 1; }
A=
while getopts ah L; do
	case $L in
	a) A=y;;
	h) echo "$HLP"; exit;;
	?) Err "\rTry '$0 -h' for more information"
	esac
done
shift $(($OPTIND - 1))
[ $# = 1 ] || Err Wrong number of parameters!
case $1 in *[!a-zA-Z0-9_-]*|""|-*) Err Illegal filename!;; esac
H=$1.sgm
[ -f "$H" ] && L=$H || L=/dev/null
awk -vH="$H" -vA="$A" '
/^((-?[1-9][0-9]*)|0?) ((-?[1-9][0-9]*)|0?)$/ {
	if(NR > 2 && NR < 1603) { F[NR] = $1; L[NR] = $2; next }
}
/^[1-9][0-9]*(( -?[1-9][0-9]*)|( 0?)){2}$/ {
	if(NR == 1) {
		s = $0; tt = $1; next
	}
	if(NR == 2 && $1 <= tt && $2 != "" && ($0 == s || s == (tt "  "))) {
		tl = $1; fl = $2; ll = $3; next
	}
}
{ exit }
function End() {
	if(fn != "") { tl = tn; fl = fn; ll = ln }
	print tn, fn, ln "\n" tl, fl, ll >(f = H "~")
	for(i = iy - 400; i++ < iy;) print F[i], L[i] >f
	for(i = im - 400; i++ < im;) print F[i], L[i] >f
	for(i = iw - 400; i++ < iw;) print F[i], L[i] >f
	for(i = id - 400; i++ < id;) print F[i], L[i] >f
	system("mv -f " f " " H)
}
END {
	if(NR && NR != 1602) exit
	tn = systime()
	if((t = tt - tt % 300) == (s = tn - tn % 300)) exit
	while(getline <"-")
		if(++i < 3 && /^((-?[1-9][0-9]*)|0)$/) { if(i == 1) fn = ln = $0; else ln = $0 }
		else { fn = ln = ""; break }
	id = 1602
	iw = 1202
	im = 802
	iy = 402
	if(!t) { if(fn != "") End(); exit }
	tz = strftime("%z", tn)
	tz = int(tz / 100) * 3600 + tz % 100 * 60
	t += tz
	s += tz
	do {
		if((t += 300) < s) f = l = ""
		else if(fn == "") f = l = ""
		else if(A) { f = fn; l = ln }
		else {
			if((f = fn - fl) < 0) f += 2^32; f = int(f / (x = tn - tl))
			if((l = ln - ll) < 0) l += 2^32; l = int(l / x)
		}
		F[++id] = f; L[id] = l
		if(!(t % 1800)) {
			iw++
			if(f == "") x = 0; else x = 1
			for(i = 6; --i;) if(F[id - i] != "") { x++; f += F[id - i]; l += L[id - i] }
			if(f == "") F[iw] = L[iw] = f; else { F[iw] = f = int(f / x); L[iw] = l = int(l / x) }
		}
		if(!(t % 7200)) {
			im++
			if(f == "") x = 0; else x = 1
			for(i = 4; --i;) if(F[iw - i] != "") { x++; f += F[iw - i]; l += L[iw - i] }
			if(f == "") F[im] = L[im] = f; else { F[im] = f = int(f / x); L[im] = l = int(l / x) }
		}
		if(!(t % 86400)) {
			iy++
			if(f == "") x = 0; else x = 1
			for(i = 12; --i;) if(F[im - i] != "") { x++; f += F[im - i]; l += L[im - i] }
			if(f == "") F[iy] = L[iy] = f; else { F[iy] = int(f / x); L[iy] = int(l / x) }
			if((x = s - t - 300) > 0) {
				t += x
				if((i = int(x / 300)) > 400) i = 400
				while(i--) F[id] = L[++id] = ""
				if((i = int(x / 1800)) > 400) i = 400
				while(i--) F[iw] = L[++iw] = ""
				if((i = int(x / 7200)) > 400) i = 400
				while(i--) F[im] = L[++im] = ""
				if((i = int(x / 86400)) > 400) i = 400
				while(i--) F[iy] = L[++iy] = ""
			}
		}
	} while(t < s)
	End()
}' "$L"
